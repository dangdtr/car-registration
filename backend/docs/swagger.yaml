basePath: /api/v1
definitions:
  httpErrors.RestError:
    properties:
      error:
        type: string
      status:
        type: integer
    type: object
  models.CarsCount:
    properties:
      q1:
        type: integer
      q2:
        type: integer
      q3:
        type: integer
      q4:
        type: integer
    type: object
  models.Inspection:
    properties:
      expiry_date:
        type: string
      inspection_date:
        type: string
      inspection_id:
        type: integer
      registration_id:
        type: string
      station_code:
        type: string
    type: object
  models.InspectionsList:
    properties:
      has_more:
        type: boolean
      inspections:
        items:
          $ref: '#/definitions/models.Inspection'
        type: array
      page:
        type: integer
      size:
        type: integer
      total_count:
        type: integer
      total_pages:
        type: integer
    type: object
  models.Pair:
    properties:
      inspection:
        $ref: '#/definitions/models.Inspection'
      station:
        $ref: '#/definitions/models.Station'
    type: object
  models.QuarterAndYear:
    properties:
      cars_count:
        $ref: '#/definitions/models.CarsCount'
      year:
        type: integer
    type: object
  models.Station:
    properties:
      province:
        type: string
      station_address:
        type: string
      station_code:
        type: string
      station_email:
        type: string
      station_hotline:
        type: string
      station_id:
        type: integer
      station_manager:
        type: string
      station_map_source:
        type: string
      station_name:
        type: string
      station_status:
        type: boolean
      station_url:
        type: string
    required:
    - province
    - station_manager
    - station_name
    type: object
  models.StationsList:
    properties:
      has_more:
        type: boolean
      page:
        type: integer
      size:
        type: integer
      stations:
        items:
          $ref: '#/definitions/models.Station'
        type: array
      total_count:
        type: integer
      total_pages:
        type: integer
    type: object
  models.User:
    properties:
      about:
        maxLength: 1024
        type: string
      avatar:
        maxLength: 512
        type: string
      created_at:
        type: string
      date_of_birth:
        type: string
      email:
        maxLength: 60
        type: string
      first_name:
        maxLength: 30
        type: string
      gender:
        type: string
      identity_no:
        maxLength: 20
        type: string
      last_name:
        maxLength: 30
        type: string
      login_date:
        type: string
      password:
        minLength: 6
        type: string
      phone_number:
        maxLength: 20
        type: string
      role:
        maxLength: 10
        type: string
      station_code:
        maxLength: 20
        type: string
      updated_at:
        type: string
      user_id:
        type: string
      user_name:
        maxLength: 60
        type: string
    required:
    - first_name
    - last_name
    - password
    type: object
  models.UsersList:
    properties:
      has_more:
        type: boolean
      page:
        type: integer
      size:
        type: integer
      total_count:
        type: integer
      total_pages:
        type: integer
      users:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
  models.Vehicle:
    properties:
      brand:
        maxLength: 255
        type: string
      chassis_number:
        maxLength: 255
        type: string
      color:
        maxLength: 255
        type: string
      engine_number:
        maxLength: 255
        type: string
      inspection_id:
        maxLength: 255
        type: string
      manufactured_country:
        maxLength: 255
        type: string
      manufactured_year:
        type: integer
      model_code:
        maxLength: 255
        type: string
      owner_id:
        type: string
      place_of_registration:
        maxLength: 255
        type: string
      registration_date:
        type: string
      registration_id:
        maxLength: 255
        type: string
      vin_id:
        maxLength: 255
        type: string
    required:
    - brand
    - chassis_number
    - color
    - engine_number
    - inspection_id
    - manufactured_country
    - manufactured_year
    - model_code
    - owner_id
    - place_of_registration
    - registration_id
    - vin_id
    type: object
  models.VehicleDetails:
    properties:
      commercial_use:
        type: string
      design_authorized_pay_load:
        type: string
      design_authorized_total_mass:
        type: string
      design_authorized_towed_mass:
        type: string
      engine_displacement:
        type: string
      equipped_with_camera:
        type: boolean
      equipped_with_tachograph:
        type: boolean
      kerb_mass:
        type: string
      largest_luggage_container_dimension:
        type: string
      laying_place:
        type: integer
      manufactured_year:
        type: integer
      mark:
        type: string
      max_output:
        type: string
      model_code:
        type: string
      modification:
        type: string
      notes:
        type: string
      number_of_tires:
        type: integer
      overall_dimension:
        type: string
      permissible_no_of_per_carried:
        type: integer
      rpm:
        type: integer
      seat:
        type: integer
      stood_place:
        type: integer
      tires_size_axle:
        type: string
      type:
        type: string
      type_of_fuel_used:
        type: string
      vin_id:
        type: string
      wheel_base:
        type: string
      wheel_formula:
        type: string
      wheel_tread:
        type: string
    required:
    - vin_id
    type: object
  models.VehiclesAndDetails:
    properties:
      vehicle:
        $ref: '#/definitions/models.Vehicle'
      vehicle_details:
        $ref: '#/definitions/models.VehicleDetails'
    type: object
  models.Visitor:
    properties:
      pair:
        items:
          $ref: '#/definitions/models.Pair'
        type: array
      vehicle:
        $ref: '#/definitions/models.Vehicle'
    type: object
info:
  contact:
    email: ddang.daodang@gmail.com
    name: Dang Dao
  description: RegistryTotal Golang REST API
  title: RegistryTotal REST API
  version: "1.0"
paths:
  /auth/{id}:
    delete:
      consumes:
      - application/json
      description: some description
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Delete user account
      tags:
      - Auth
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: get user by id
      tags:
      - Auth
  /auth/{name}:
    get:
      consumes:
      - application/json
      description: Find user by name
      parameters:
      - description: username
        format: username
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UsersList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Find by name
      tags:
      - Auth
  /auth/{station_code}:
    get:
      consumes:
      - application/json
      description: Find user by station code
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UsersList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Find by station code
      tags:
      - Auth
  /auth/{user_id}:
    put:
      consumes:
      - application/json
      description: update existing user
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Update user
      tags:
      - Auth
  /auth/{user_name}:
    get:
      consumes:
      - application/json
      description: Find user by name
      parameters:
      - description: username
        format: username
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Find by name
      tags:
      - Auth
  /auth/all:
    get:
      consumes:
      - application/json
      description: Get the list of all users
      parameters:
      - description: page number
        format: page
        in: query
        name: page
        type: integer
      - description: number of elements per page
        format: size
        in: query
        name: size
        type: integer
      - description: filter name
        format: orderBy
        in: query
        name: orderBy
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UsersList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Get users
      tags:
      - Auth
  /auth/change-password/{user_id}:
    put:
      consumes:
      - application/json
      description: Change user password
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
      summary: Change user password
      tags:
      - Auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: login user, returns user and set session
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Login new user
      tags:
      - Auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: logout user removing session
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Logout user
      tags:
      - Auth
  /auth/me:
    get:
      consumes:
      - application/json
      description: Get current user by id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Get user by id
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: register new user, returns user and token
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
      summary: Register new user
      tags:
      - Auth
  /auth/token:
    get:
      consumes:
      - application/json
      description: Get CSRF token, required auth session cookie
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Get CSRF token
      tags:
      - Auth
  /insp/:
    post:
      consumes:
      - application/json
      description: Create inspection
      operationId: Create inspection
      parameters:
      - description: user id
        format: user_id
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Inspection'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Create inspection
      tags:
      - insp
  /insp/{inspection_id}:
    delete:
      consumes:
      - application/json
      description: Delete inspection
      operationId: Delete
      parameters:
      - description: inspection id
        format: inspection_id
        in: path
        name: inspection_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Delete inspection
      tags:
      - insp
    get:
      consumes:
      - application/json
      description: Get inspection by ID
      operationId: GetByID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InspectionsList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Get inspection by ID
      tags:
      - insp
    put:
      consumes:
      - application/json
      description: Update inspection
      operationId: Update
      parameters:
      - description: inspection id
        format: inspection_id
        in: path
        name: inspection_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Inspection'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Update inspection
      tags:
      - Insp
  /insp/all:
    get:
      consumes:
      - application/json
      description: Get the list of all inspections
      operationId: GetAll
      parameters:
      - description: page number
        format: page
        in: query
        name: page
        type: integer
      - description: number of elements per page
        format: size
        in: query
        name: size
        type: integer
      - description: filter name
        format: orderBy
        in: query
        name: orderBy
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InspectionsList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Get all inspections following pagination query(size, page, orderBy
      tags:
      - insp
  /insp/expiry-date:
    get:
      consumes:
      - application/json
      description: Get inspections by expiry date
      parameters:
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Inspection'
      summary: Get inspections by expiry date
      tags:
      - insp
  /insp/inspection-date:
    get:
      consumes:
      - application/json
      description: Get inspections by inspection date
      parameters:
      - description: Month
        in: query
        name: month
        required: true
        type: integer
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InspectionsList'
      summary: Get inspections by inspection date
      tags:
      - insp
  /insp/registration/{registration_id}:
    get:
      consumes:
      - application/json
      description: Get inspection by registration id
      operationId: GetByRegistrationID
      parameters:
      - description: registration id
        format: registration_id
        in: path
        name: registration_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InspectionsList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Get inspection by registration id
      tags:
      - insp
  /insp/station/{station_code}:
    get:
      consumes:
      - application/json
      description: Get inspection by station code
      operationId: GetByStationCode
      parameters:
      - description: area code
        format: station_code
        in: path
        name: station_code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InspectionsList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Get inspection by station code
      tags:
      - insp
  /insp/statistic:
    get:
      consumes:
      - application/json
      description: Count inspections by quarter and year
      parameters:
      - description: Year
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.QuarterAndYear'
      summary: Count inspections by quarter and year
      tags:
      - insp
  /insp/statistic/all:
    get:
      consumes:
      - application/json
      description: Count inspections by quarter and year
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.QuarterAndYear'
      summary: Count inspections by quarter and year
      tags:
      - insp
  /insp/statistic/region:
    get:
      consumes:
      - application/json
      description: Count inspections by region and year
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
      summary: Count inspections by region and year
      tags:
      - insp
  /station:
    get:
      consumes:
      - application/json
      description: Get all stations
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Limit per page
        in: query
        name: limit
        type: integer
      - description: Sort by
        in: query
        name: sort
        type: string
      - description: Order by
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.StationsList'
      summary: Get all stations
      tags:
      - station
  /station/{station_code}:
    get:
      consumes:
      - application/json
      description: Get station by Code
      parameters:
      - description: Station Code
        in: path
        name: station_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Station'
      summary: Get station by Code
      tags:
      - station
  /vehicle/details/{registration_id}:
    get:
      consumes:
      - application/json
      description: Get vehicle details information by registration ID
      parameters:
      - description: Registration ID
        in: path
        name: registration_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.VehiclesAndDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Get vehicle details by registration ID
      tags:
      - Vehicles
  /vehicles:
    get:
      consumes:
      - application/json
      description: Get a list of all vehicles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Vehicle'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Get all vehicles
      tags:
      - Vehicles
    post:
      consumes:
      - application/json
      description: Create a new vehicle with the provided data
      parameters:
      - description: Vehicle object
        in: body
        name: vehicle
        required: true
        schema:
          $ref: '#/definitions/models.Vehicle'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Vehicle'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpErrors.RestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Create a new vehicle
      tags:
      - Vehicles
    put:
      consumes:
      - application/json
      description: Update an existing vehicle with the provided data
      parameters:
      - description: Vehicle object
        in: body
        name: vehicle
        required: true
        schema:
          $ref: '#/definitions/models.Vehicle'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Vehicle'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpErrors.RestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Update vehicle
      tags:
      - Vehicles
  /vehicles/{registration_id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing vehicle by registration ID
      parameters:
      - description: Registration ID
        in: path
        name: registration_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Delete vehicle
      tags:
      - Vehicles
    get:
      consumes:
      - application/json
      description: Get vehicle information by registration ID
      parameters:
      - description: Registration ID
        in: path
        name: registration_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Vehicle'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Get vehicle by registration ID
      tags:
      - Vehicles
  /visitor:
    post:
      consumes:
      - application/json
      description: Get visitor by registration ID
      parameters:
      - description: Registration ID
        in: query
        name: registration_id
        required: true
        type: string
      - description: Person Identity Number
        in: query
        name: person_identity_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Visitor'
      summary: Get visitor by registration ID
      tags:
      - visitor
swagger: "2.0"
