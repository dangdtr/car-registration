basePath: /api/v1
definitions:
  httpErrors.RestError:
    properties:
      error:
        type: string
      status:
        type: integer
    type: object
  models.Inspection:
    properties:
      expiry_date:
        type: string
      inspection_date:
        type: string
      inspection_id:
        type: integer
      registration_id:
        type: string
      station_code:
        type: string
    type: object
  models.InspectionsList:
    properties:
      has_more:
        type: boolean
      inspections:
        items:
          $ref: '#/definitions/models.Inspection'
        type: array
      page:
        type: integer
      size:
        type: integer
      total_count:
        type: integer
      total_pages:
        type: integer
    type: object
  models.User:
    properties:
      about:
        maxLength: 1024
        type: string
      avatar:
        maxLength: 512
        type: string
      created_at:
        type: string
      email:
        maxLength: 60
        type: string
      first_name:
        maxLength: 30
        type: string
      identity_no:
        maxLength: 20
        type: string
      last_name:
        maxLength: 30
        type: string
      login_date:
        type: string
      password:
        minLength: 6
        type: string
      phone_number:
        maxLength: 20
        type: string
      role:
        maxLength: 10
        type: string
      station_code:
        maxLength: 20
        type: string
      updated_at:
        type: string
      user_id:
        type: string
      user_name:
        maxLength: 60
        type: string
    required:
    - first_name
    - last_name
    - password
    type: object
  models.UsersList:
    properties:
      has_more:
        type: boolean
      page:
        type: integer
      size:
        type: integer
      total_count:
        type: integer
      total_pages:
        type: integer
      users:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
info:
  contact:
    email: ddang.daodang@gmail.com
    name: Dang Dao
  description: RegistryTotal Golang REST API
  title: RegistryTotal REST API
  version: "1.0"
paths:
  /auth/{id}:
    delete:
      consumes:
      - application/json
      description: some description
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Delete user account
      tags:
      - Auth
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: get user by id
      tags:
      - Auth
    put:
      consumes:
      - application/json
      description: update existing user
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Update user
      tags:
      - Auth
  /auth/{name}:
    get:
      consumes:
      - application/json
      description: Find user by name
      parameters:
      - description: username
        format: username
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UsersList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Find by name
      tags:
      - Auth
  /auth/{station_code}:
    get:
      consumes:
      - application/json
      description: Find user by station code
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UsersList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Find by station code
      tags:
      - Auth
  /auth/{user_name}:
    get:
      consumes:
      - application/json
      description: Find user by name
      parameters:
      - description: username
        format: username
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Find by name
      tags:
      - Auth
  /auth/all:
    get:
      consumes:
      - application/json
      description: Get the list of all users
      parameters:
      - description: page number
        format: page
        in: query
        name: page
        type: integer
      - description: number of elements per page
        format: size
        in: query
        name: size
        type: integer
      - description: filter name
        format: orderBy
        in: query
        name: orderBy
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UsersList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Get users
      tags:
      - Auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: login user, returns user and set session
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Login new user
      tags:
      - Auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: logout user removing session
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Logout user
      tags:
      - Auth
  /auth/me:
    get:
      consumes:
      - application/json
      description: Get current user by id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Get user by id
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: register new user, returns user and token
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
      summary: Register new user
      tags:
      - Auth
  /auth/token:
    get:
      consumes:
      - application/json
      description: Get CSRF token, required auth session cookie
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Get CSRF token
      tags:
      - Auth
  /insp/:
    post:
      consumes:
      - application/json
      description: Create inspection
      operationId: Create inspection
      parameters:
      - description: user id
        format: user_id
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Inspection'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Create inspection
      tags:
      - Insp
  /insp/{inspection_id}:
    delete:
      consumes:
      - application/json
      description: Delete inspection
      operationId: Delete
      parameters:
      - description: inspection id
        format: inspection_id
        in: path
        name: inspection_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Delete inspection
      tags:
      - Insp
    get:
      consumes:
      - application/json
      description: Get inspection by ID
      operationId: GetByID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InspectionsList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Get inspection by ID
      tags:
      - Insp
    put:
      consumes:
      - application/json
      description: Update inspection
      operationId: Update
      parameters:
      - description: inspection id
        format: inspection_id
        in: path
        name: inspection_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Inspection'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Update inspection
      tags:
      - Insp
  /insp/all:
    get:
      consumes:
      - application/json
      description: Get the list of all inspections
      operationId: GetAll
      parameters:
      - description: page number
        format: page
        in: query
        name: page
        type: integer
      - description: number of elements per page
        format: size
        in: query
        name: size
        type: integer
      - description: filter name
        format: orderBy
        in: query
        name: orderBy
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InspectionsList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Get all inspections following pagination query(size, page, orderBy
      tags:
      - Insp
  /insp/registration/{registration_id}:
    get:
      consumes:
      - application/json
      description: Get inspection by registration id
      operationId: GetByRegistrationID
      parameters:
      - description: registration id
        format: registration_id
        in: path
        name: registration_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InspectionsList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Get inspection by registration id
      tags:
      - Insp
  /insp/station/{station_code}:
    get:
      consumes:
      - application/json
      description: Get inspection by station code
      operationId: GetByStationCode
      parameters:
      - description: station code
        format: station_code
        in: path
        name: station_code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InspectionsList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Get inspection by station code
      tags:
      - Insp
swagger: "2.0"
